<?php

namespace common\models;

use backend\models\Gallery;
use backend\models\Rubric;
use Yii;
use yii\helpers\ArrayHelper;
use yii\web\UploadedFile;

/**
 * This is the model class for table "black_list".
 *
 * @property int $id
 * @property string $first_name
 * @property string $last_name
 * @property string $middle_name
 * @property string $comment
 * @property string $date_born
 * @property string $place_born
 * @property int $moder
 * @property string $moder_comment
 * @property string $ser_num_car
 * @property int $type_org
 * @property int $user_id
 * @property int $phone
 * @property int $email
 */
class BlackList extends \yii\db\ActiveRecord
{
    public $type_db;
    public $file;
    public $files;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'black_list';
    }

    public function __construct($config = [])
    {
        $rubric = new Rubric();
        $rubric = $rubric::find()->all();
        $this->type_db = ArrayHelper::map($rubric,'id','title');
        parent::__construct($config);
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['first_name','last_name'],'required'],
            [['comment', 'moder_comment'], 'string'],
            [['date_born'], 'safe'],
            [['moder', 'type_org', 'user_id'], 'integer'],
            [['file'], 'file', 'extensions'=>'jpg, gif, png', 'maxSize'=>'3000000','maxFiles' => 4],
            [['first_name','phone','email', 'last_name', 'middle_name', 'place_born', 'ser_num_car'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'first_name' => 'ИМЯ',
            'last_name' => 'ФАМИЛИЯ',
            'middle_name' => 'ОТЧЕСТВО',
            'comment' => 'КРАТКОЕ ОПИСАНИЕ ПРАВОНАРУШЕНИЯ *',
            'date_born' => 'ДАТА РОЖДЕНИЯ',
            'place_born' => 'ДАТА РОЖДЕНИЯ',
            'moder' => 'Moder',
            'moder_comment' => 'Moder Comment',
            'ser_num_car' => 'Ser Num Car',
            'type_org' => 'БАЗА ДАННЫХ',
            'user_id' => 'User ID',
            'phone' => 'ТЕЛЕФОН',
            'email' => 'EMAIL',
        ];
    }
    
    public function beforeSave($insert)
    {   
        $this->user_id = Yii::$app->getUser()->identity->id;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $this->file = UploadedFile::getInstances($this, 'file');
        if (!empty($this->file)) {
            foreach ($this->file as $item){
                $fileName = rand(0, 999) . '_' . time() . '.' . $item->extension;
                if (!is_dir(Yii::getAlias('@frontend') . '/web/uploads/black-list/')) {
                    mkdir(Yii::getAlias('@frontend') . '/web/uploads/black-list/');
                }
                $item->saveAs(Yii::getAlias('@frontend') . '/web/uploads/black-list/' . $fileName);
                $file = new Gallery();
                $file->parent_id = $this->id;
                $file->url = $fileName;
                $file->save();
            }
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }


}
